/**
 * 构造函数：
 *      构造函数不会被继承，只是会在子类创建前被调用（可以通过super()调用），继承和调用是两个概念
 *
 *      只有在没有定义任何一个构造函数时，才会生成默认构造函数，一旦定义了一个构造函数，不管有参无参，默认构造函数都不存在了
 *
 *      子类的任何构造函数，包括默认构造函数，在第一步都是调用父类的默认构造函数，
 *      但是如果一旦在构造函数中手动调用了父类的任何构造函数super()，就不会再调用父类的默认构造函数了
 *
 *      由于默认构造函数不存在引起的编译错误：
 *          1. 父类定义了任一构造函数，子类没有定义构造函数，由于父类的默认构造函数不存在了，子类无法调用父类的默认构造函数
 *          2. 父类定义了任一构造函数，子类也定义了自己的构造函数，但是在构造函数里没有手动调用父类的任一定义的构造函数，
 *              会默认调用父类的默认构造函数，由于父类的默认构造函数不存在了，子类无法调用父类的默认构造函数
 *
 *      由于定义的无参构造函数和默认构造函数混合：
 *          1. 反射中通过 Class.getConstructor().newInstance() 创建实例时，调用的是实例的无参构造函数，而不是默认构造函数，所以如果类没有定义无参构造函数，会报错
 *          但是注意 Class.newInstance()调用的是默认构造函数创建实例，适合没有定义构造函数的类
 */
public class CreateFunction {
}
